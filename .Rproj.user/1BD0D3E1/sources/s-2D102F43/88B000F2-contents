library(lubridate)
library(ggplot2)
library(tidyr)
library(dplyr)
library(reshape2)
library(gridExtra)
library(plotly)
library(choroplethr)
library(choroplethrMaps)
library(RColorBrewer)
theme_set(theme_minimal())


death_penalty <- read.csv("1991_2017_individualFIPS.csv", header = TRUE, stringsAsFactors = FALSE)
str(death_penalty)
death_penalty$sent_date <- ymd(death_penalty$sent_date)
death_penalty$offns_date <- ymd(death_penalty$offns_date)

ggplot(death_penalty, aes(x=year)) +
  geom_bar()

state_dp <- ggplot(death_penalty, aes(x=state)) +
  geom_bar() +
  xlab(NULL)
state_dp + theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust = 0)) 


homicides <- read.csv("CrimeTrendsInOneVar.csv", header = TRUE)
str(homicides)

homicides_gathered <- homicides %>%
  gather(state, count, -Year)
str(homicides_gathered)
state_hom <- ggplot(homicides_gathered, aes(x=state, y=count)) +
  geom_bar(stat = "identity") +
  xlab(NULL)
state_hom + theme(axis.text.x = element_text(angle = -45, vjust = 1, hjust = 0))

homicides_total <- homicides_gathered %>%
  group_by(Year) %>%
  rename(year = Year)
  summarise(total_hom = sum(count))

deathpen_total <- death_penalty %>%
  group_by(year) %>%
  count(defendant) %>%
  summarise(total_pen = sum(n))

hom_deathpen <- inner_join(deathpen_total, homicides_total, by = "year")

g1 <- ggplot(hom_deathpen, aes(x=year, y=total_hom)) +
  geom_line() + ylim(10000, 25000) + xlab(NULL) +
  ylab("Homicides")

g2 <- ggplot(hom_deathpen, aes(x=year, y=total_pen)) +
  geom_line() + ylim(0, 350) + xlab(NULL) +
  ylab("Death Penalties")

png("hom-dp.png", width = 720, height = 640)
grid.arrange(g1, g2, nrow=1, top = "U.S. Homicides/Death Penalties Over Time")
dev.off()

pops <- read.csv("statePops.csv", header = TRUE, stringsAsFactors = FALSE)
pops <- rename(pops, state = State)

homPerPop <- inner_join(pops, homicides_gathered, by = "state") %>%
  filter(Year == 2014) %>%
  mutate(rate = (Population / count) * 100000)

dpPerPop <- inner_join(pops, death_penalty, by = "state") %>%
  group_by(year, state, fips_st, Population) %>%
  count(defendant) %>%
  summarise(count = sum(n)) %>%
  mutate(dp_rate = (count / Population) * 100000)

homRate <- read.csv("Homicide Rate Over Time.csv", header = TRUE,
                    check.names = FALSE, stringsAsFactors = FALSE)

library(stringr)
homs <- homRate %>%
  gather(year, rate, -state) %>%
  mutate(year = str_extract(year, "[^X]+"))

homs$year <- as.integer(homs$year)

combinedRate <- full_join(dpPerPop, homs, by = c("state", "year"))

combined_df <- as.data.frame(combinedRate)

mycols <- brewer.pal(7, "YlGnBu")

# Create dataset for choroplethr map
dp1996 <- combined_df %>%
  filter(year == 1996) %>%
  select(state, dp_rate)


names(dp1996) <- c("region", "value")
dp1996$region <- tolower(dp1996$region)

choro1 <- StateChoropleth$new(dp1996)
choro1$title <- "Death Penalty Rate (1996)"
choro1$ggplot_scale <- scale_fill_manual(name = "Rate", values = mycols, drop = TRUE)
choro1$render()

hom1996 <- combined_df %>%
  filter(year == 1996) %>%
  select(state, rate)

names(hom1996) <- c("region", "value")
hom1996$region <- tolower(hom1996$region)

choro2 <- StateChoropleth$new(hom1996)
choro2$title <- "Homicide Rate (1996)"
choro2$ggplot_scale <- scale_fill_manual(name = "Rate", values = mycols, drop = TRUE)
choro2$render()

png("dp1996.png", width = 720, height = 720)
choro1$render()
dev.off()

png("hom1996.png", width = 720, height = 720)
choro2$render()
dev.off()

dp2016 <- combined_df %>%
  filter(year == 2016) %>%
  select(state, dp_rate)
names(dp2016) <- c("region", "value")
dp2016$region <- tolower(dp2016$region)

choro3 <- StateChoropleth$new(dp2016)
choro3$title <- "Death Penalty Rate (2016)"
choro3$ggplot_scale <- scale_fill_manual(name = "Rate", values = mycols, drop = TRUE)
choro3$render()

hom2016 <- combined_df %>%
  filter(year == 2016) %>%
  select(state, rate)
names(hom2016) <- c("region", "value")
hom2016$region <- tolower(hom2016$region)

choro4 <- StateChoropleth$new(hom2016)
choro4$title <- "Homicide Rate (2016)"
choro4$ggplot_scale <- scale_fill_manual(name = "Rate", values = mycols, drop = TRUE)
choro4$render()

png("dp2016.png", height = 720, width = 720)
choro3$render()
dev.off()

png("hom2016.png", height = 720, width = 720)
choro4$render()
dev.off()

# create animated time series maps
dpPerPop_df <- as.data.frame(dpPerPop) # convert so it doesn't add grouping var
dp_ts <- combined_df %>%
  select(year, state, count)
names(dp_ts) <- c("year", "region", "count") # change "state" to "region" for mapping
dp_ts$region <- tolower(dp_ts$region)
dp_ts_wide <- dcast(dp_ts, region ~ year, value.var = "count") # convert to wide format

# create a list of choropleths of death penalty verdicts per state for each year
choropleths = list()
for (i in 2:(ncol(dp_ts_wide))) {
  df = dp_ts_wide[, c(1, i)]
  colnames(df) = c("region", "value")
  title = paste0("Death Penalty Verdicts: ", colnames(dp_ts_wide)[i])
  choropleths[[i-1]] = state_choropleth(df, title=title) +
    scale_fill_manual(values = mycols, name = "Death Penalty Verdicts")
}

choroplethr_animate(choropleths)
